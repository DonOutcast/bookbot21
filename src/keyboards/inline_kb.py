from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.callback_data import CallbackData

city_markup = InlineKeyboardMarkup(row_width=1)
users_markup = InlineKeyboardMarkup(row_width=1)
objects_markup = InlineKeyboardMarkup(row_width=1)
name_rooms_markup = InlineKeyboardMarkup(row_width=1)

kzn_inline_button = InlineKeyboardButton(text="–ö–∞–∑–∞–Ω—å üèØ", callback_data='city_kzn')
msk_inline_button = InlineKeyboardButton(text="–ú–æ—Å–∫–≤–∞ üè≠", callback_data='city_msk')
nsk_inline_button = InlineKeyboardButton(text="–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ üè∞", callback_data='city_nsk')

city_markup.add(kzn_inline_button).add(msk_inline_button).add(nsk_inline_button)

adm_inline_button = InlineKeyboardButton(text="–ê–¥–º ü¶Å", callback_data='user_adm')
student_inline_button = InlineKeyboardButton(text="–°—Ç—É–¥–µ–Ω—Ç üë®‚Äçüíª", callback_data='user_student')
intensivist_inline_button = InlineKeyboardButton(text="–ò–Ω—Ç–µ–Ω—Å–∏–≤–∏—Å—Ç ü•∑", callback_data='user_intensivist')

users_markup.add(adm_inline_button).add(student_inline_button).add(intensivist_inline_button)


board_games_button = InlineKeyboardButton(text="–ù–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã üéÆ üé≤‚ôü", callback_data='object_–ù–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã')
conference_room_button = InlineKeyboardButton(text="–ü–µ—Ä–µ–≥–æ–≤–æ—Ä–Ω—ã–µ üíºüï∞", callback_data='object_–ü–µ—Ä–µ–≥–æ–≤–æ—Ä–Ω—ã–µ')
sports_equipment_button = InlineKeyboardButton(text="–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å üèÄüèìüéØ", callback_data='object_–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å')
kitchen_room_button = InlineKeyboardButton(text="–ö—É—Ö–Ω—è üçΩ", callback_data="object_–ö—É—Ö–Ω—è")
books_button = InlineKeyboardButton(text="–ö–Ω–∏–≥–∏ üìö", callback_data="object_–ö–Ω–∏–≥–∏")
objects_markup.add(board_games_button).add(conference_room_button).add(sports_equipment_button).add(kitchen_room_button).add(books_button)

filter_drop_booking = CallbackData('drop', 'action', 'booking_id')


def create_button(booking_id: int) -> InlineKeyboardMarkup:

    cancle_booking = InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω—å", callback_data=filter_drop_booking.new(action="bye_booking", booking_id=booking_id))
    cancel_markup = InlineKeyboardMarkup(row_width=1)
    cancel_markup.add(cancle_booking)
    return cancel_markup


kzn_inline_button = InlineKeyboardButton(text=" üèØ", callback_data='city_kzn')
msk_inline_button = InlineKeyboardButton(text="–ú–æ—Å–∫–≤–∞ üè≠", callback_data='city_msk')
nsk_inline_button = InlineKeyboardButton(text="–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ üè∞", callback_data='city_nsk')

# filter_list = CallbackData('type', 'action', 'id')


# async def type_list():
#     res = await user_db.sql_object_name()
#     return res
#
#
# async def object_list(type_name):
#     lis_of_type_name = await user_db.sql_list_object(type_name)
#     return lis_of_type_name


# def inline_type_list():
#     list_types = type_list()
#     row_button = []
#     for type_name in list_types:
#         line = InlineKeyboardButton(text=type_name,
#                                     callback_data=filter_list.new(action='get_type_list',
#                                                                   id=type_name))
#         row_button.append([line, ])
#     return InlineKeyboardMarkup(inline_keyboard=row_button)
#
#
# def inline_object_list(type_name):
#     list_object = object_list(type_name)
#     row_button = []
#     for object_id, object_name in list_object:
#         line = InlineKeyboardButton(text=object_name,
#                                     callback_data=filter_list.new(action='get_object_list',
#                                                                   id=object_id))
#         row_button.append([line, ])
#     return InlineKeyboardMarkup(inline_keyboard=row_button)



